/**
https://github.com/FelixVogel/Penguins
Copyright (c) 2020 Felix Vogel

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
*/
var Behaviour=function(){function i(i,n){this.init=i;this.update=n}i.prototype._init=function(i){this.data={penguin:i};this.init(this.data)};i.prototype._update=function(i){this.update(i,this.data)};return i}();var Penguin=function(){function i(i,n){this.behaviours=[new Behaviour(function(i){var n=i["penguin"];var e=1;var t=0;if(n.getX()<0){e=1;t=n.getX()*-1+30}else if(n.getX()>window.innerWidth){e=-1;t=n.getX()-window.innerWidth+30}else e=Math.random()>=.5?1:-1;var a=Math.max(.1,Math.min(.9,Math.random()))*window.innerWidth;var r=25+Math.random()*10;i["penguin"].setDirection(e);i["immunityDistance"]=t;i["distance"]=a+t;i["speed"]=r},function(i,n){var e=n["speed"]*i;if(n["immunityDistance"]<=0&&(n["distance"]-e<0||n["penguin"].getX()<=-30||n["penguin"].getX()>=window.innerWidth+30)){n["penguin"].killBehaviour()}else{if(n["immunityDistance"]>0){n["immunityDistance"]-=e}n["distance"]-=e;n["penguin"].setX(n["penguin"].getX()+n["penguin"].getDirection()*e)}}),new Behaviour(function(i){i["time"]=500+Math.random()*3e3},function(i,n){n["time"]-=i*1e3;if(n["time"]<=0){n["penguin"].killBehaviour()}}),new Behaviour(function(i){var n=Math.ceil(Math.random()*(window.innerHeight-window.innerHeight*.95));i["distance"]=n;i["speed"]=2+Math.random()*10;i["mod"]=Math.random()>=.5?1:-1},function(i,n){var e=n["speed"]*i;if(n["distance"]-e<=0||n["penguin"].getY()+20+e*n["mod"]>=window.innerHeight||n["penguin"].getY()+20+e*n["mod"]<=window.innerHeight*.95){n["penguin"].killBehaviour()}else{n["penguin"].setY(n["penguin"].getY()+e*n["mod"])}})];this.currentBehaviour=-1;this._new=true;this.x=i;this.y=n}i.prototype.update=function(i){if(this._new){this._new=false;this.currentBehaviour=0;this.behaviours[0]._init(this)}if(this.currentBehaviour==-1){this.currentBehaviour=Math.ceil(Math.random()*this.behaviours.length)-1;this.behaviours[this.currentBehaviour]._init(this)}this.behaviours[this.currentBehaviour]._update(i)};i.prototype.killBehaviour=function(){this.currentBehaviour=-1};i.prototype.getX=function(){return this.x};i.prototype.setX=function(i){this.x=i};i.prototype.getY=function(){return this.y};i.prototype.setY=function(i){this.y=i};i.prototype.getDirection=function(){return this.direction};i.prototype.setDirection=function(i){this.direction=i};return i}();var forEach=function(i,n){if(!i||!n||i.length==0)return;for(var e=0,t=i.length;e<t;e++){n(i[e],e)}};var capsule=function(i){i()};var canvas=document.getElementById("game");var graphics=canvas.getContext("2d");var penguinScale=.3;var assets={penguin:undefined,hill_overlay:undefined};var loadAssets=function(n){var e=0;var t=function(i){if(i===void 0){i=1}e+=i;if(e>=Object.keys(assets).length){n()}};capsule(function(){var i=new Image;i.onload=function(){t()};i.src="images/penguin.png";assets.penguin=i});capsule(function(){var i=new Image;i.onload=function(){t()};i.src="images/hill_overlay.png";assets.hill_overlay=i})};var init=function(){var e=assets.penguin.width*penguinScale;var t=assets.penguin.height*penguinScale;var i=function(){var i=document.createElement("canvas");i.width=window.innerWidth;i.height=window.innerHeight;canvas.width=window.innerWidth;canvas.height=window.innerHeight;var a=[];var n=Math.ceil(window.innerHeight*((60+Math.floor(Math.random()*5))/100));var r=Math.ceil(window.innerHeight*((20+Math.floor(Math.random()*5))/100));var o=(n-r)/2;var e=function(i,n){if(i&&n){a.push({x:i,y:n});return}if(Math.random()<=.25){var e=Math.ceil(r+o+Math.random()*o);a.push({x:i,y:e})}else{var t=Math.ceil(r+o/2+Math.random()*o);a.push({x:i,y:t})}};var t=function(){e(Math.ceil(25+Math.random()*50)*-1);for(var i=0;i<window.innerWidth;){var n=Math.ceil(25+Math.random()*50);i+=n;e(i)}e(window.innerWidth+25,window.innerHeight+50)};t();graphics.fillStyle="#000000";graphics.strokeStyle="#000000";graphics.beginPath();graphics.moveTo(-25,window.innerHeight+50);forEach(a,function(i,n){graphics.lineTo(i.x,i.y)});graphics.closePath();graphics.fill();graphics.save();graphics.globalCompositeOperation="source-atop";graphics.drawImage(assets.hill_overlay,0,Math.ceil(window.innerHeight*.3),window.innerWidth,Math.ceil(window.innerHeight*.7));graphics.restore();graphics.save();graphics.stroke();graphics.fillStyle="#ffffff";graphics.fillRect(0,Math.ceil(window.innerHeight*.95),window.innerWidth,window.innerHeight);graphics.restore();i.getContext("2d").drawImage(canvas,0,0);return i};var a=i();var r=[];var n=function(){var i=window.innerHeight*.95-20;var n=window.innerHeight-window.innerHeight*.95-5;r=[];var e=50+Math.floor(Math.random()*50);for(var t=0;t<e;t++){r.push(new Penguin(Math.random()*(window.innerWidth-30),i+Math.ceil(Math.random()*n)))}};n();window.addEventListener("resize",function(){a=i();n()});var o=0;var h=function(i){var n=(i-o)/1e3;graphics.clearRect(0,0,window.innerWidth,window.innerHeight);graphics.drawImage(a,0,0);forEach(r,function(i){return i.update(n)});forEach(r,function(i){if(i.getDirection()==1){graphics.drawImage(assets.penguin,i.getX(),i.getY(),e,t)}else{graphics.save();graphics.scale(-1,1);graphics.translate(-e,0);graphics.drawImage(assets.penguin,-i.getX(),i.getY(),e,t);graphics.restore()}});o=i;window.requestAnimationFrame(h)};o=performance.now();window.requestAnimationFrame(h)};window.addEventListener("load",function(){loadAssets(function(){return init()})});